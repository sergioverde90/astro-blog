---
import { type CollectionEntry, getCollection } from 'astro:content';
import type { GetStaticPaths, Page } from 'astro';

import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';

import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Pagination from '../../components/Pagination.astro';
import Card from '../../components/Card.astro';

export const getStaticPaths : GetStaticPaths = async ({ paginate }) => {
    const posts = (await getCollection('blog'))
        .filter(post => !post.data.draft)
        .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
    );
    
    return paginate(posts, { pageSize: 9 });
};

type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

const page = Astro.props.page;
---

<html lang="en">
<BaseHead title={`${SITE_TITLE} | Blog`} description={SITE_DESCRIPTION} />
<body>
	<Header />
    <main>
        <div class="blog-posts">
            {page.data.map(post => (
                <Card id={post.id} data={post.data} />
            ))}
        </div>
        <Pagination page={page} />
    </main>
	<Footer />
</body>
</html>

<script is:inline>
    document.getElementById("submit")?.addEventListener("click", (e) => {
        const searchData = document.getElementById("search").value;
    
        if (!searchData) return;
    
        // TODO: sanitize url
        const url = new URL("/search", window.location.origin);
        url.searchParams.set("q", searchData);
        window.location.replace(url.toString());
    });
</script>