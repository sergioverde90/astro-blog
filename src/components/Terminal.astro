---
---
<div id="terminal" class="terminal" >
  <div class="terminal-buttons">
    <span class="terminal-button close">x</span>
    <span class="terminal-button minimize">-</span>
    <span class="terminal-button zoom">&lt;&gt;</span>
  </div>
</div>

<!-- this component can be anywhere because it's hidden 
  and it's only used to be cloned -->
<div class="terminal-prompt" style="visibility: hidden;">
  <div class="terminal-start-typing"> <span> &gt; </span></div> 
  <div><slot/></div>
</div>

<script>
    var toClone = document.getElementsByClassName("terminal-prompt")[0] as HTMLElement;
    var lines = document.getElementsByClassName("terminal-line") as HTMLCollectionOf<HTMLElement>

    var delay = 0;
    let lastElementAdded : HTMLElement;

    for(let line of lines) {
      var delayValue = parseInt(line.classList[1].split("-")[1]);
      delay += delayValue;
      setTimeout(() => { lastElementAdded = addElement(line); }, delay);
    }

    function addElement(terminalLine : HTMLElement) {
      if (lastElementAdded != null) { lastElementAdded.style.border = "none"; }
      var clone = toClone.cloneNode(true) as HTMLElement;
      clone.style.visibility = "visible";

      var child = clone.children[1] as HTMLElement;
      
      // if it's an output line, add the writting animation
      child.textContent = terminalLine.textContent;
      if (terminalLine.classList.contains("input")) {
        child.classList.add("cursor");
        child.classList.add("typewriter-animation");
      } else {
        var typsddf = clone.children[0] as HTMLElement;
        typsddf.style.visibility = "hidden";
      }

      // Append the new element and scroll the terminal to the bottom
      var terminalEl = document.getElementById("terminal") as HTMLElement;
      terminalEl.appendChild(clone);
      terminalEl.scrollTop = terminalEl.scrollHeight;

      return child;
    }
</script>

<style>
@import url(https://fonts.googleapis.com/css?family=Anonymous+Pro);
.terminal {
  font-family: 'Anonymous Pro', monospace;
  height: 360px;
  width: 100%;
  border-radius: 10px 10px 10px 10px;
  background-color: rgb(28, 28, 28);
  float: left;
  margin: 0px 0px 0px 0px;
  overflow: auto;
  position: relative;
  padding-bottom: 15px;
}

.terminal-buttons {
  background-color:  rgb(81, 81, 81);
  height: 20px;
  border-radius: 10px 10px 0px 0px;
  display: flex;

  gap: 7px;
  padding-top: 5px;
  padding-left: 8px;

  /* make the position sticky to always see buttons when scrolling down */
  position: sticky;
  top: 0;
}

.terminal-button {
  border-radius: 100%;
  text-align: center;
  font-weight: 800;
  width: 15px;
  height: 15px;
  font-size: 48%;
}

.terminal-buttons .close {
  color: rgb(107, 0, 0);
  background-color: red;
}

.terminal-buttons .minimize {
  color: rgb(73, 57, 0);
  background-color: rgb(255, 200, 0);
}

.terminal-buttons .zoom {
  color: rgb(7, 64, 0);
  background-color: rgb(10, 192, 4);
  transform: rotate(45deg);
}

.terminal-prompt {
  display: flex;
  padding-top: 1%;
  color: #1ab708; 
  background-color: rgb(28, 28, 28);
  font-size: medium;
}

.terminal-start-typing {
  display: block;
  width: 25px;
  padding-left: 3%;
}

.cursor {
    border-right: 2px solid #1ab708;
    white-space: nowrap;
    overflow: hidden;
    background-color: rgb(28, 28, 28);
    max-width: fit-content;
}

.cursor span {
    padding-left: 3px;
}

/* Animation */
.typewriter-animation {
  animation: 
    /* total duration | steps | initial-delay | iteration count |animation direction | */
    typewriter 5s steps(40) 1s 1 alternate both, 
    blinkingCursor 700ms steps(40) infinite normal;
}

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blinkingCursor{
  from { border-right-color: #1ab708; }
  to { border-right-color: transparent; }
}

</style>