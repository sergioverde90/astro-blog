---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);

const pathnameArr = pathname.split('/');
const hrefArr = href?.toString().split('/');

const isActive = (href === '/' && pathname === '') // is '/' the root path
	|| pathnameArr[0] === hrefArr?.[1];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		padding: 1em 0.5em;
		color: var(--main-color);
		border-bottom: 4px solid transparent;
		text-decoration: none;
		display: inline-block;
		font-weight: 500;
		text-decoration: none;
		font-size: medium;
	}
	a.active {
		text-decoration-line: underline;
  		text-decoration-style: solid;
  		text-decoration-color: var(--highlight);
		text-underline-offset: 6px;
		text-decoration-thickness: 2px;
		font-weight: 700;
	}
	a:not(.active):hover {
		text-decoration-line: underline;
  		text-decoration-style: solid;
  		text-decoration-color: rgb(230, 230, 230);
		text-underline-offset: 6px;
		text-decoration-thickness: 2px;
	}
</style>
